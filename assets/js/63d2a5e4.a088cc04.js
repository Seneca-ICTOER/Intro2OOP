"use strict";(self.webpackChunkoop345=self.webpackChunkoop345||[]).push([[678],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return b}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(r),b=s,f=m["".concat(i,".").concat(b)]||m[b]||u[b]||o;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function b(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,a=new Array(o);a[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:s,a[1]=c;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7060:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var n=r(7462),s=r(3366),o=(r(7294),r(3905)),a=["components"],c={id:"abstract-base-classes",title:"Abstract Base Classes",sidebar_position:2,description:"TBD"},i="Abstract Base Classes",l={unversionedId:"E-Polymorphism/abstract-base-classes",id:"E-Polymorphism/abstract-base-classes",isDocsHomePage:!1,title:"Abstract Base Classes",description:"TBD",source:"@site/docs/E-Polymorphism/abstract-base-classes.md",sourceDirName:"E-Polymorphism",slug:"/E-Polymorphism/abstract-base-classes",permalink:"/E-Polymorphism/abstract-base-classes",editUrl:"https://github.com/Seneca-ICTOER/Intro2OOP/tree/main/docs/E-Polymorphism/abstract-base-classes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"abstract-base-classes",title:"Abstract Base Classes",sidebar_position:2,description:"TBD"},sidebar:"courseNotesSidebar",previous:{title:"Virtual Functions",permalink:"/E-Polymorphism/virtual-functions"},next:{title:"Templates",permalink:"/E-Polymorphism/templates"}},p=[],u={toc:p};function m(e){var t=e.components,r=(0,s.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"abstract-base-classes"},"Abstract Base Classes"))}m.isMDXComponent=!0}}]);